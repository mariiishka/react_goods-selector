{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addGood","good","setState","clearGood","removeGood","clearedGoods","filter","item","createText","penultGood","indexOf","length","twoLastGoods","slice","withoutTwoLastGoods","join","this","className","type","onClick","map","cn","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,S,EAI1CE,UAAY,WACV,EAAKD,SAAS,CAAEH,aAAc,M,EAGhCK,WAAa,SAACH,GACZ,IACMI,EADQ,EAAKP,MAAMC,aACEO,QAAO,SAAAC,GAAI,OAAIA,IAASN,KAEnD,EAAKC,SAAS,CAAEH,aAAcM,K,EAGhCG,WAAa,WACX,IAAQT,EAAiB,EAAKD,MAAtBC,aACFU,EAAaV,EAAaW,QAAQX,EAAaA,EAAaY,OAAS,IACrEC,EAAeb,EAAac,MAAMJ,EAAYV,EAAaY,QAC3DG,EAAsBf,EAAac,MAAM,EAAGJ,GAElD,OAAQV,EAAaY,QACnB,KAAK,EACH,MAAO,mBACT,KAAK,EACH,MAAM,GAAN,OAAUZ,EAAagB,OAAvB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUhB,EAAagB,KAAK,SAA5B,iBACF,KAAKnB,EAAgBe,OACnB,MAAO,qBACT,QACE,MAAM,GAAN,OAAUG,EAAoBC,KAAK,MAAnC,aAA6CH,EAAaG,KAAK,SAA/D,mB,4CAIN,WACE,IAAQhB,EAAiBiB,KAAKlB,MAAtBC,aAENC,EAIEgB,KAJFhB,QACAG,EAGEa,KAHFb,UACAC,EAEEY,KAFFZ,WACAI,EACEQ,KADFR,WAGF,OACE,sBAAKS,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,4BAGA,sBAAKA,UAAU,aAAf,UACE,6BACGT,MAEFT,EAAaY,OAAS,GAEnB,wBACEM,UAAU,kCACVC,KAAK,SACLC,QAAShB,EAHX,qBAUR,oBAAIc,UAAU,YAAd,SACGrB,EAAgBwB,KAAI,SAAAnB,GAAI,OACvB,qBACEgB,UAAWI,IAAG,iBAAkB,CAC9B,2BAA4BtB,EAAauB,SAASrB,KAFtD,UAME,6BAAKA,IACJF,EAAauB,SAASrB,GAEnB,wBACEgB,UAAU,+BACVC,KAAK,SACLC,QAAS,WACPf,EAAWH,IAJf,oBAWA,wBACEgB,UAAU,kCACVC,KAAK,SACLC,QAAS,WACPnB,EAAQC,IAJZ,mBAhBCA,e,GA/EDsB,IAAMC,WAiHT3B,ICrIf4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dfcec798.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGood: string[];\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  addGood = (good: string) => {\n    this.setState((state) => ({\n      selectedGood: [...state.selectedGood, good],\n    }));\n  };\n\n  clearGood = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  removeGood = (good: string) => {\n    const goods = this.state.selectedGood;\n    const clearedGoods = goods.filter(item => item !== good);\n\n    this.setState({ selectedGood: clearedGoods });\n  };\n\n  createText = () => {\n    const { selectedGood } = this.state;\n    const penultGood = selectedGood.indexOf(selectedGood[selectedGood.length - 2]);\n    const twoLastGoods = selectedGood.slice(penultGood, selectedGood.length);\n    const withoutTwoLastGoods = selectedGood.slice(0, penultGood);\n\n    switch (selectedGood.length) {\n      case 0:\n        return 'no good selected';\n      case 1:\n        return `${selectedGood.join()} is selected`;\n      case 2:\n        return `${selectedGood.join(' and ')} are selected`;\n      case goodsFromServer.length:\n        return 'all goods selected';\n      default:\n        return `${withoutTwoLastGoods.join(', ')}, ${twoLastGoods.join(' and ')} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const {\n      addGood,\n      clearGood,\n      removeGood,\n      createText,\n    } = this;\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__header\">\n          <h1 className=\"app__title\">\n            Selected good:\n          </h1>\n          <div className=\"app__goods\">\n            <h2>\n              {createText()}\n            </h2>\n            {selectedGood.length > 0\n              && (\n                <button\n                  className=\"app__button app__button--remove\"\n                  type=\"button\"\n                  onClick={clearGood}\n                >\n                  X\n                </button>\n              )}\n          </div>\n        </div>\n        <ul className=\"app__list\">\n          {goodsFromServer.map(good => (\n            <li\n              className={cn('app__list-item', {\n                'app__list-item--selected': selectedGood.includes(good),\n              })}\n              key={good}\n            >\n              <h3>{good}</h3>\n              {selectedGood.includes(good)\n                ? (\n                  <button\n                    className=\"app__button app__button--add\"\n                    type=\"button\"\n                    onClick={() => {\n                      removeGood(good);\n                    }}\n                  >\n                    Remove\n                  </button>\n                )\n                : (\n                  <button\n                    className=\"app__button app__button--remove\"\n                    type=\"button\"\n                    onClick={() => {\n                      addGood(good);\n                    }}\n                  >\n                    Add\n                  </button>\n                )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}